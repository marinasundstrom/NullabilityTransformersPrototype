openapi: 3.0.1
info:
  title: NullabilityTransformersPrototype | v1
  version: 1.0.0
servers:
  - url: http://localhost:5295
paths:
  /Test/Test:
    get:
      tags:
        - Test
      operationId: Test_Test
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Test"
            application/json:
              schema:
                $ref: "#/components/schemas/Test"
            text/json:
              schema:
                $ref: "#/components/schemas/Test"
  /Test/Test2:
    get:
      tags:
        - Test
      operationId: Test_Test2
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Test"
                nullable: true
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Test"
                nullable: true
            text/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Test"
                nullable: true
  /Test/Test3:
    get:
      tags:
        - Test
      operationId: Test_Test3
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/KeyValuePairOfTestAndInt32"
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValuePairOfTestAndInt32"
            text/json:
              schema:
                $ref: "#/components/schemas/KeyValuePairOfTestAndInt32"
  /Test/T1:
    post:
      tags:
        - Test
      operationId: Test_T1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Test"
          text/json:
            schema:
              $ref: "#/components/schemas/Test"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Test"
        required: true
      responses:
        "200":
          description: OK
  /Test/T2:
    post:
      tags:
        - Test
      operationId: Test_T2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Test"
          text/json:
            schema:
              $ref: "#/components/schemas/Test"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Test"
      responses:
        "200":
          description: OK
  /Test/T3:
    post:
      tags:
        - Test
      operationId: Test_T3
      parameters:
        - name: x
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Test"
          text/json:
            schema:
              $ref: "#/components/schemas/Test"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Test"
        required: true
      responses:
        "200":
          description: OK
  /Test/T4:
    post:
      tags:
        - Test
      operationId: Test_T4
      parameters:
        - name: x
          in: query
          schema:
            type: integer
            format: int32
            default: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Test"
          text/json:
            schema:
              $ref: "#/components/schemas/Test"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Test"
        required: true
      responses:
        "200":
          description: OK
  /Test/T5:
    post:
      tags:
        - Test
      operationId: Test_T5
      parameters:
        - name: x
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Test"
          text/json:
            schema:
              $ref: "#/components/schemas/Test"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Test"
        required: true
      responses:
        "200":
          description: OK
  /Test/GetAnimal:
    get:
      tags:
        - Test
      operationId: Test_GetAnimal
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/Animal"
            application/json:
              schema:
                $ref: "#/components/schemas/Animal"
            text/json:
              schema:
                $ref: "#/components/schemas/Animal"
  /Test/PostAnimal:
    post:
      tags:
        - Test
      operationId: Test_PostAnimal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Animal"
          text/json:
            schema:
              $ref: "#/components/schemas/Animal"
          application/*+json:
            schema:
              $ref: "#/components/schemas/Animal"
        required: true
      responses:
        "200":
          description: OK
components:
  schemas:
    Animal:
      required:
        - species
      type: object
      discriminator:
        propertyName: species
        mapping:
          Dog: "#/components/schemas/AnimalDog"
          Cat: "#/components/schemas/AnimalCat"
      x-abstract: true
    AnimalCat:
      allOf:
        - $ref: "#/components/schemas/Animal"
        - required:
            - name
          type: object
          properties:
            name:
              type: string
    AnimalDog:
      allOf:
        - $ref: "#/components/schemas/Animal"
        - required:
            - foo
          type: object
          properties:
            foo:
              type: boolean
    KeyValuePairOfTestAndInt32:
      required:
        - key
        - value
      type: object
      properties:
        key:
          $ref: "#/components/schemas/Test"
        value:
          type: integer
          format: int32
    Test:
      required:
        - x
      type: object
      properties:
        x:
          type: string
      description: This is a test type
tags:
  - name: Test
